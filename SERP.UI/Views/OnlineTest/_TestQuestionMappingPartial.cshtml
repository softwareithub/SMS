@{
    ViewData["Title"] = "Index";
    Layout = null;

}
@model IEnumerable<SERP.Core.Model.ExamModel.TestQuestionModel>

<style>
    .invalid {
        border: 2px solid red;
    }

    .valid {
        border: 2px solid green;
    }
    td {
        word-break: break-all;
    }
</style>

<section class="content-header">
    <h1>
        Test Question Bank
        <small>Mapped Question To Test</small>
    </h1>
</section>


<section class="content">
    <div class="row">

        <div class="col-md-12">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Test Question Mapping</h3>
                    <div class="col-md-12">
                        <div class="col-md-10">
                            <a class="btn btn-primary pull-right" onclick="GetNewRecordList()">
                                <i class="fa fa-list-ul"></i>
                            </a>
                        </div>
                        <div class="col-md-2">
                            <a class="btn btn-primary pull-left" onclick="NewAcademicMaster()">
                                <i class="fa fa-plus-square"></i>
                            </a>
                        </div>
                    </div>

                </div>
                <div class="overlay divHidding" id="divFormData">
                    <i class="fa fa-refresh fa-spin">

                    </i>
                </div>
                <form method="post" data-ajax="true" data-ajax-method="post"
                      asp-action="CreateQuestion" asp-controller="TestQuestionMapping" data-ajax-success="Success"
                      data-ajax-begin="CustomFormSubmitBegin" data-ajax-complete="CustomFormSubmitComplete">
                    <div class="box-body">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label>Select Test</label>
                                <select class="form-control" name="TestId" asp-items="@(new SelectList(ViewBag.TestDetail ,"Id","TestName"))" onchange="GetQuestionDetails()">
                                    <option value="0">Select</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <table class="table table-responsive" style="width:100%" id="tblQuestionDetail">
                                <thead>
                                    <tr>
                                        <th>
                                            Select
                                        </th>
                                        <th>
                                            Course
                                        </th>
                                        <th>
                                            Subject
                                        </th>
                                        <th>
                                            Question
                                        </th>
                                        <th>
                                            Marks
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var data in Model)
                                    {
                                        <tr>
                                            <td>
                                                <input type="checkbox" name="QuestionId" value="@data.QuestionId" />
                                            </td>
                                            <td>
                                                @data.CourseName
                                            </td>
                                            <td>
                                                @data.SubjectName
                                            </td>
                                            <td style="word-break:break-all">
                                                <label style="word-break:break-all">@Html.Raw(data.Question) </label>
                                            </td>
                                            <td>
                                                <input type="number" name="questionMark" value="@data.QuestionPoint" class="form-control" />
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>


                    <div class="box-footer">
                        <div class="col-md-8">
                            @Html.SERPButton("btn btn-primary pull-right btnSubmit", Model == null ? 0 : Model.First().TestId)
                            <button class="buttonload" style="display:none">
                                <i class="fa fa-refresh fa-spin"></i>Loading
                            </button>
                        </div>
                        <div class="col-md-4">
                            <button type="reset" class="btn btn-danger pull-left">Cancel</button>
                        </div>

                    </div>
                </form>
            </div>
        </div>

        @await Html.PartialAsync("~/Views/Shared/_CommanModalPartial.cshtml")

        <div class="modal fade" id="TestPublishModal" role="dialog">
            <div class="modal-dialog modal-sm">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">
                            <a>
                                Set Test Start Date Time
                            </a>
                        </h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Test Start Date Time</label>
                                    <input type="hidden" id="hiddenTestId" />
                                    <input type="datetime-local" class="form-control" id="txtDateTime" />
                                </div>
                                <div class="col-md-12">
                                    <label>
                                        Send Email/SMS Notification
                                    </label>
                                    <select class="form-control" id="ddlNotificationType" onchange="GetNotification()">
                                        <option value="SMS">SMS</option>
                                        <option value="Email">Email</option>
                                    </select>

                                </div>
                                <div class="col-md-12">
                                    <label>Select Template</label>
                                    <select class="form-control" id="ddlNotification">
                                    </select>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" onclick="Publish()" class="btn btn-primary">
                            <i class="fa fa-arrow-up">
                                Publish

                            </i>
                        </button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>
<script type="text/javascript"
        src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>
<script type="text/javascript">
    if (window.MathJax) {
        MathJax.Hub.Queue(
            ["resetEquationNumbers", MathJax.InputJax.TeX],
            ["Typeset", MathJax.Hub]
        );
    }
</script>
<script>

    function GetNewRecordList() {
        GetCustomRecord("/TestQuestionMapping/GetTestDetail");
        setTimeout(function () {
            $("#modalTitle").text("Test Question Mapping")
        }, 300);
    }
    function NewAcademicMaster() {
        var url = "/TestQuestionMapping/Index";
        NewCustomRecord(url);
    }
    function CheckThis(eData) {
        debugger;
        $('input:checkbox').removeAttr('checked');

    }
    function GetSubjectList() {
        debugger;
        var courseId = $("#CourseId").val();
        $("#SubjectId").empty()
        $("#SubjectId").append('<option value="0">Select</option>');
        $.get("/CommanDataForJson/SubjectJson", { courseId: courseId }, function (responseData) {
            for (var i = 0; i < responseData.length; i++) {
                debugger;
                var html = '<option value=' + responseData[i].id + '>' + responseData[i].subjectName + '</option>'
                $("#SubjectId").append(html);
            }
        })
    }
    function IsMultipleChoise() {
        var isValue = $("#ddlMultiple").val();
        if (isValue == 1) {
            $("#divMultipleChoice").removeAttr('style');
        }
        else {
            $("#divMultipleChoice").attr('style', "display:none");
        }
    }
    $(document).ready(function () {
        $("#tblQuestionDetail").DataTable({
            pagination: false
        });
    });

    function PublishTest(id) {
        $("#hiddenTestId").val(id);
        $("#TestPublishModal").modal('show');
    }

    function Publish() {
        var testId = $("#hiddenTestId").val();
        var date = $("#txtDateTime").val();
        var templateId = $("#ddlNotification").val();
        if (date.length > 0) {
            $("#txtDateTime").removeClass("invalid")
            $("#txtDateTime").addClass('valid');
            $.get("/TestQuestionMapping/PublishTest", { dateTime: date, testId: testId, templateId: templateId}, function (data) {
                alertify.success(data);
            });
        }
        else {
            $("#txtDateTime").addClass("invalid")
            $("#txtDateTime").removeClass('valid');
        }
    }

    function GetNotification() {
        var notificationType = $("#ddlNotificationType").val();
        $("#ddlNotification").empty();
        $.get("/OnlineTest/GetSMSEmailTemplate", { notificationType: notificationType }, function (data) {
            for (var i = 0; i < data.length; i++) {
                debugger;
                $("#ddlNotification").append("<option value=" + data[i].id+">" + data[i].templateName+"</option>")
            }
        });
    }
</script>

