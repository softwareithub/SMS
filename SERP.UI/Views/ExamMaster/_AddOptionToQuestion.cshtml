@{
    ViewData["Title"] = "Index";
    Layout = null;

}
@model SERP.Core.Entities.Entity.Core.ExamDetail.OptionMaster

<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<link href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/ckeditor/plugins/eqneditor/"></script>
<script src="~/ckeditor/plugins/dialog/"></script>
<script src="~/ckeditor/plugins/dialogui/"></script>

<script type="text/x-mathjax-config">
    MathJax.Hub.Config({
    tex2jax: { inlineMath: [['$','$'],['\\(','\\)']] }
    });
</script>
<script type='text/javascript' src='http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>

<section class="content-header">
    <h1>
        Question Bank
        <small>Create Question Bank</small>
    </h1>
</section>


<section class="content">
    <div class="row">

        <div class="col-md-12">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Option Setting</h3>
                    <div class="col-md-12">
                        <div class="col-md-10">
                            <a class="btn btn-primary pull-right" onclick="GetNewRecordList()">
                                <i class="fa fa-list-ul"></i>
                            </a>
                        </div>
                        <div class="col-md-2">
                            <a class="btn btn-primary pull-left" onclick="NewAcademicMaster()">
                                <i class="fa fa-plus-square"></i>
                            </a>
                        </div>
                    </div>

                </div>
                <div class="overlay divHidding" id="divFormData">
                    <i class="fa fa-refresh fa-spin">

                    </i>
                </div>
                <form id="form" method="post" data-ajax="true" data-ajax-method="post"
                      asp-action="CreateOptions" asp-controller="OnlineTest" data-ajax-success="SuccessOptionDetails"
                      data-ajax-begin="CustomFormSubmitBegin" data-ajax-complete="CustomFormSubmitComplete">
                    <div class="box-body">
                        <div class="col-md-12">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Select Question</label>
                                    <select class="form-control" asp-for="QuestionId" onchange="GetOptionDetail()">
                                        <option value="">Select</option>
                                        @foreach (var data in (IEnumerable<SERP.Core.Entities.Entity.Core.ExamDetail.QuestionModel>)ViewBag.QuestionList)
                                        {
                                            <option value="@data.Id">@Html.Raw(data.Question)</option>
                                        }
                                    </select>
                                    <span asp-validation-for="QuestionId" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Is Correct Answere</label>
                                    <select class="form-control" asp-for="IsCorrectAnswere">
                                        <option value="0"> No</option>
                                        <option value="1"> Yes</option>
                                    </select>
                                    <span asp-validation-for="IsCorrectAnswere" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-12">
                                <div id="divOption">

                                </div>
                            </div>

                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <input type="hidden" asp-for="Id" />
                                <input type="hidden" asp-for="CreatedBy" />
                                <input type="hidden" asp-for="CreatedDate" />
                                <label asp-for="OptionData">Question</label>
                                <textarea asp-for="OptionData" class="form-control ckeditor"></textarea>
                                <span asp-validation-for="OptionData" class="text-danger"></span>
                            </div>
                        </div>


                    </div>
                    <!-- /.box-body -->

                    <div class="box-footer">
                        <div class="col-md-8">
                            @Html.SERPButton("btn btn-primary pull-right btnSubmit", Model == null ? 0 : Model.Id)
                            <button class="buttonload" style="display:none">
                                <i class="fa fa-refresh fa-spin"></i>Loading
                            </button>
                        </div>
                        <div class="col-md-4">
                            <button type="reset" class="btn btn-danger pull-left">Cancel</button>
                        </div>

                    </div>
                </form>
            </div>
        </div>

        @await Html.PartialAsync("~/Views/Shared/_CommanModalPartial.cshtml")


        

    </div>
</section>

<script>

    function GetNewRecordList() {
        GetCustomRecord("/OnlineTest/GetList");
        setTimeout(function () {
            $("#modalTitle").text("Question Details")
        }, 300);
    }
    function NewAcademicMaster() {
        var url = "/OnlineTest/Index";
        NewCustomRecord(url);
    }


    function SuccessOptionDetails(response) {
        alert("Option Addedd to Question")
        GetOptionDetail();
    }

    function GetOptionDetail() {
        var QuestionId = $("#QuestionId").val();
        $.get("/OnlineTest/GetQuestionOptionList", { questId: QuestionId }, function (data) {
            $("#divOption").html(data);
        })
    }



    function changeOptionCorrect(eval, id) {
        $.get("/OnlineTest/UpdateOptionCorrect", { id: id, correctOption: eval.value }, function (data) {
            GetOptionDetail();
        })
    }


    function DeleteOption(id) {
        alertify.confirm("Are you sure want to delete the Option ?", function () {
            $.get("/OnlineTest/DeleteOption", { id: id }, function (data) {
                alertify.success(data);
                GetOptionDetail();
            })
        })
        
    }

</script>

<script>
    (function () {
        var mathElements = [
            'math',
            'maction',
            'maligngroup',
            'malignmark',
            'menclose',
            'merror',
            'mfenced',
            'mfrac',
            'mglyph',
            'mi',
            'mlabeledtr',
            'mlongdiv',
            'mmultiscripts',
            'mn',
            'mo',
            'mover',
            'mpadded',
            'mphantom',
            'mroot',
            'mrow',
            'ms',
            'mscarries',
            'mscarry',
            'msgroup',
            'msline',
            'mspace',
            'msqrt',
            'msrow',
            'mstack',
            'mstyle',
            'msub',
            'msup',
            'msubsup',
            'mtable',
            'mtd',
            'mtext',
            'mtr',
            'munder',
            'munderover',
            'semantics',
            'annotation',
            'annotation-xml'
        ];

        CKEDITOR.plugins.addExternal('ckeditor_wiris', 'https://ckeditor.com/docs/ckeditor4/4.14.1/examples/assets/plugins/ckeditor_wiris/', 'plugin.js');

        CKEDITOR.replace('OptionData', {
            extraPlugins: 'ckeditor_wiris',
            // For now, MathType is incompatible with CKEditor file upload plugins.
            removePlugins: 'uploadimage,uploadwidget,uploadfile,filetools,filebrowser',
            height: 320,
            // Update the ACF configuration with MathML syntax.
            extraAllowedContent: mathElements.join(' ') + '(*)[*]{*};img[data-mathml,data-custom-editor,role](Wirisformula)'
        });


    }());
</script>