@{
    ViewData["Title"] = "Index";
    Layout = null;

}
@model SERP.UI.Models.QuestionVm

<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
<link href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/ckeditor/plugins/eqneditor/"></script>
<script src="~/ckeditor/plugins/dialog/"></script>
<script src="~/ckeditor/plugins/dialogui/"></script>

<script type="text/x-mathjax-config">

</script>
<script type='text/javascript' src='http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>

<section class="content-header">
    <h1>
        Question Bank
        <small>Create Question Bank</small>
    </h1>
</section>


<section class="content">
    <div class="row">

        <div class="col-md-12">
            <!-- general form elements -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Create Question Bank</h3>
                    <div class="col-md-12">
                        <div class="col-md-10">
                            <a class="btn btn-primary pull-right" onclick="GetNewRecordList()">
                                <i class="fa fa-list-ul"></i>
                            </a>
                        </div>
                        <div class="col-md-2">
                            <a class="btn btn-primary pull-left" onclick="NewAcademicMaster()">
                                <i class="fa fa-plus-square"></i>
                            </a>
                        </div>
                    </div>

                </div>
                <div class="overlay divHidding" id="divFormData">
                    <i class="fa fa-refresh fa-spin">

                    </i>
                </div>
                <form id="form" method="post" data-ajax="true" data-ajax-method="post" data-ajax-confirm="Are you sure want to save the Question? If you want to add more options to the question, Please cancel and proceed or else click Ok to save the question with Options"
                      asp-action="CreateQuestion" asp-controller="OnlineTest" data-ajax-success="SuccessQuestionBank"
                      data-ajax-begin="CustomFormSubmitBegin" data-ajax-complete="CustomFormSubmitComplete">
                    <div class="box-body">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Select Course</label>
                                <select id="CourseId" asp-for="QuestionModel.CourseId" class="form-control" asp-items="@(new SelectList(ViewBag.CourseList ,"Id","Name"))" onchange="GetSubjectList()">
                                    <option value="0">Select</option>
                                </select>
                                <span asp-validation-for="QuestionModel.CourseId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="QuestionModel.SubjectId">Select Subject</label>
                                <select asp-for="QuestionModel.SubjectId" class="form-control" id="SubjectId" onchange="GetLessonDetails()">
                                    <option value="0">Select</option>
                                </select>
                                <span asp-validation-for="QuestionModel.SubjectId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="QuestionModel.LessonId">Chapter/Lesson</label>
                                <select asp-for="QuestionModel.LessonId" class="form-control" id="ddlLesson">
                                    <option value="0">Select</option>
                                </select>
                                <span asp-validation-for="QuestionModel.LessonId"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="QuestionModel.AnswereType">Select OptionType</label>
                                <select asp-for="QuestionModel.AnswereType" class="form-control" id="SubjectId">
                                    <option value="SingleSelect">SingleSelect</option>
                                    <option value="MulttiSelect">MulttiSelect</option>
                                    <option value="Descriptive">Descriptive</option>
                                </select>
                                <span asp-validation-for="QuestionModel.AnswereType" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <input type="hidden" asp-for="QuestionModel.Id" />
                                <input type="hidden" asp-for="QuestionModel.CreatedBy" />
                                <input type="hidden" asp-for="QuestionModel.CreatedDate" />
                                <label asp-for="QuestionModel.Question">Question</label>
                                <textarea asp-for="QuestionModel.Question" class="form-control ckeditor" rows="3"></textarea>
                                <span asp-validation-for="QuestionModel.Question" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group">
                                <label asp-for="OptionMasters.OptionData">Options</label>
                                <textarea asp-for="OptionMasters.OptionData" class="form-control ckeditor" rows="3"></textarea>
                                <span asp-validation-for="OptionMasters.OptionData" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <input type="button" id="AddTempOption" class="btn btn-success pull-right" onclick="fn_AddOptions('insert','')" value="Add Options" />
                        </div>
                        <div class="col-md-12" id="divOptions">

                        </div>
                    </div>
                    <div class="box-footer">

                        <div id="divCancelSubmit" style="display:none">
                            <div class="col-md-4">
                                @Html.SERPButton("btn btn-primary pull-right btnSubmit", Model == null ? 0 : Model.QuestionModel.Id)
                                <button class="buttonload" style="display:none">
                                    <i class="fa fa-refresh fa-spin"></i>Loading
                                </button>
                            </div>
                            <div class="col-md-4">
                                <button type="reset" class="btn btn-danger pull-left">Cancel</button>
                            </div>
                        </div>


                    </div>
                </form>
            </div>
        </div>

        @Html.Partial("~/Views/Shared/SERPModalPopUp.cshtml")




    </div>
</section>

<script>
    function editTempOption(tempOptionId) {
        debugger;
        var Ques = $('#row_' + tempOptionId).find('td:eq(0)').html();
        var Option = $('#row_' + tempOptionId).find('td:eq(1)').html();

        $('#cke_QuestionModel_Question').find('.cke_wysiwyg_frame').contents().find('html').find('body').html(Ques)
        $('#cke_OptionMasters_OptionData').find('.cke_wysiwyg_frame').contents().find('html').find('body').html(Option)
        $('#AddTempOption').val("Update Option");
        $('#AddTempOption').attr('data-updateid', tempOptionId);
    }

    function deleteTempOption(tempoptionid) {
        debugger;
        $.post("/OnlineTest/DeleteOptionTemp", { tempoptionid: tempoptionid }, function (data) {
            $("#divOptions").html(data);
        }).done(function () {
            $('#row_' + tempOptionId).remove();
            $("#divCancelSubmit").removeAttr("style");
        });


        
    }

    function SuccessQuestionBank(response) {        
        if (response == "Server error please contact admin team") {
            alertify.set('notifier', 'position', 'top-center');
            alertify.error(response);
        }
        else {
            alertify.set('notifier', 'position', 'top-center');
            alertify.success(response);
            $('#divOptions').html("");
            $('#QuestionModel.Question').text("");
            $('#OptionMasters.OptionData').text("");
        }

        //$("#form")[0].reset();//reset the form controll.
        //$(".form-control").val('');//Clear the controll which is present inside the form.
    }
    function GetLessonDetails() {
        var subjectId = $("#SubjectId").val();
        var html = "";
        $("#ddlLesson").empty();
        $("#ddlLesson").append("<option value=''>select</option>");
        $.get("/LessonTopic/GetLessonDetail", { subjectid: subjectId }, function (data) {
            for (var i = 0; i < data.length; i++) {
                html += "<option value=" + data[i].id + ">" + data[i].lessonName + "</option>";
                $("#ddlLesson").append(html);
            }
        });
    }

    function GetNewRecordList() {
        GetCustomRecord("/OnlineTest/GetList");
        setTimeout(function () {
            $("#modalTitle").text("Question Details")
        }, 300);
    }
    function NewAcademicMaster() {
        var url = "/OnlineTest/Index";
        NewCustomRecord(url);
    }



    function CheckThis(eData) {

        $('input:checkbox').removeAttr('checked');

    }
    function GetSubjectList() {

        var courseId = $("#CourseId").val();
        $("#SubjectId").empty()
        $("#SubjectId").append('<option value="0">Select</option>');
        $.get("/CommanDataForJson/SubjectJson", { courseId: courseId }, function (responseData) {
            for (var i = 0; i < responseData.length; i++) {

                var html = '<option value=' + responseData[i].id + '>' + responseData[i].subjectName + '</option>'
                $("#SubjectId").append(html);
            }
        })
    }
    function IsMultipleChoise() {
        var isValue = $("#ddlMultiple").val();
        if (isValue == 1) {
            $("#divMultipleChoice").removeAttr('style');
        }
        else {
            $("#divMultipleChoice").attr('style', "display:none");
        }
    }

    function AddOptions() {
        $.get("/OnlineTest/AddOptions", function (data) {
            $("#divOptionDetails").html(data);
            $("#OptionModel").modal('show');
        })
    }

    function fn_AddOptions() {
        
        var optionUpdateId = $('#AddTempOption').attr("data-updateid");
        var action = "";
        if (optionUpdateId == null || optionUpdateId == "") {
            action = "insert";
            var question = $('#cke_QuestionModel_Question').find('.cke_wysiwyg_frame').contents().find('html').find('body').html();
            var options = $('#cke_OptionMasters_OptionData').find('.cke_wysiwyg_frame').contents().find('html').find('body').html();
            //var question = CKEDITOR.instances['QuestionModel_Question'].getData();
            //var options = CKEDITOR.instances['OptionMasters_OptionData'].getData();
            var guid = generate();
            var ischecked = false;
            var model = { question: question, options: options, optiontempid: guid, ischecked: ischecked, action:action }
            $.post("/OnlineTest/AddOptionTemp", { model: model }, function (data) {
                $("#divOptions").html(data);
            }).done(function () {
                $("#divCancelSubmit").removeAttr("style")
            });
        }
        else {
            action = "update";
            var question = $('#cke_QuestionModel_Question').find('.cke_wysiwyg_frame').contents().find('html').find('body').html()
            var options = $('#cke_OptionMasters_OptionData').find('.cke_wysiwyg_frame').contents().find('html').find('body').html()
            //var question = CKEDITOR.instances['QuestionModel_Question'].getData();
            //var options = CKEDITOR.instances['OptionMasters_OptionData'].getData();
            var guid = optionUpdateId;
            var ischecked = false;
            var model = { question: question, options: options, optiontempid: guid, ischecked: ischecked, action: action }
            $.post("/OnlineTest/AddOptionTemp", { model: model }, function (data) {
                $("#divOptions").html(data);
            }).done(function () {
                $("#divCancelSubmit").removeAttr("style")
                $('#AddTempOption').val('Add Options');
                $('#AddTempOption').attr("data-updateid","");
            });
        }
    }

    function ConfirmQuestion() {
        alertify.confirm("Are you sure want to save the Question? If you want to add more options to the question, Please cancel and proceed or else click Ok to save the question with Options")
    }
</script>

<script>
    (function () {
        var mathElements = [
            'math',
            'maction',
            'maligngroup',
            'malignmark',
            'menclose',
            'merror',
            'mfenced',
            'mfrac',
            'mglyph',
            'mi',
            'mlabeledtr',
            'mlongdiv',
            'mmultiscripts',
            'mn',
            'mo',
            'mover',
            'mpadded',
            'mphantom',
            'mroot',
            'mrow',
            'ms',
            'mscarries',
            'mscarry',
            'msgroup',
            'msline',
            'mspace',
            'msqrt',
            'msrow',
            'mstack',
            'mstyle',
            'msub',
            'msup',
            'msubsup',
            'mtable',
            'mtd',
            'mtext',
            'mtr',
            'munder',
            'munderover',
            'semantics',
            'annotation',
            'annotation-xml'
        ];

        CKEDITOR.plugins.addExternal('ckeditor_wiris', 'https://ckeditor.com/docs/ckeditor4/4.14.1/examples/assets/plugins/ckeditor_wiris/', 'plugin.js');

        CKEDITOR.replace('QuestionModel.Question', {
            extraPlugins: 'ckeditor_wiris',
            // For now, MathType is incompatible with CKEditor file upload plugins.
            removePlugins: 'uploadimage,uploadwidget,uploadfile,filetools,filebrowser',
            height: 250,
            // Update the ACF configuration with MathML syntax.
            extraAllowedContent: mathElements.join(' ') + '(*)[*]{*};img[data-mathml,data-custom-editor,role](Wirisformula)'
        });


        CKEDITOR.replace('OptionMasters.OptionData', {
            extraPlugins: 'ckeditor_wiris',
            // For now, MathType is incompatible with CKEditor file upload plugins.
            removePlugins: 'uploadimage,uploadwidget,uploadfile,filetools,filebrowser',
            height: 250,
            // Update the ACF configuration with MathML syntax.
            extraAllowedContent: mathElements.join(' ') + '(*)[*]{*};img[data-mathml,data-custom-editor,role](Wirisformula)'
        });

    }());
</script>