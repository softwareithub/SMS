// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SERP.Core.Entities.Context;

namespace SERP.Core.Entities.Migrations
{
    [DbContext(typeof(SERPContext))]
    [Migration("20200116031609_SERP152020")]
    partial class SERP152020
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.HRModule.BranchInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BranchAddress")
                        .IsRequired();

                    b.Property<string>("BranchCode");

                    b.Property<string>("BranchEmail");

                    b.Property<string>("BranchLogo");

                    b.Property<string>("BranchManagerName")
                        .IsRequired();

                    b.Property<string>("ContactPersonPhone")
                        .IsRequired();

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("IFSCCode")
                        .IsRequired();

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("BankDetail","HR");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.HRModule.DepartmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Department","HR");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.HRModule.DesignationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Designation","HR");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.HRModule.EmployeeAttendenceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AttendenceDate");

                    b.Property<string>("AttendenceType");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("EmployeeId");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("EmployeeAttendence","HR");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.HRModule.EmployeeBasicInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<int>("BankId");

                    b.Property<string>("BloodGroup");

                    b.Property<string>("C_Address");

                    b.Property<int>("ConvictedForCrime");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("DesignationId");

                    b.Property<string>("Email");

                    b.Property<string>("EmergencyPhone");

                    b.Property<string>("EmpCode");

                    b.Property<string>("FatherName");

                    b.Property<string>("Gender");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("JoiningDate");

                    b.Property<string>("MotherName");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("Photo");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("p_Address");

                    b.HasKey("Id");

                    b.ToTable("EmployeeBasicInfo","HR");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.HRModule.EmployeeProfessionalInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("DepartmentId");

                    b.Property<int>("DesignationId");

                    b.Property<int>("EmployeeId");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("EmployeeProfessionalInfo","HR");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.HRModule.EmployeeSalaryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("EmployeeId");

                    b.Property<int>("HeadId");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("EmployeeSalaryAllocation","HR");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.HRModule.PayHeadesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addition_Deduction")
                        .IsRequired();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<int>("IsDependentPerDay");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("PayHeads","HR");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Master.AcademicMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("AcademicMaster","Master");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Master.BatchMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchCode");

                    b.Property<string>("BatchName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int?>("CourseId")
                        .IsRequired()
                        .HasColumnName("CourseMasterId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("BatchMaster","Master");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Master.CasteMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Caste","Master");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Master.CourseMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttendenceType")
                        .IsRequired();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<decimal>("MinimumAttendencePercentage");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("CourseMaster","Master");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Master.InstituteMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(500);

                    b.Property<string>("AdminContactPerson")
                        .HasMaxLength(70);

                    b.Property<string>("Code")
                        .HasMaxLength(20);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .HasMaxLength(30);

                    b.Property<string>("Fax")
                        .HasMaxLength(20);

                    b.Property<string>("InstituteLogo");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasMaxLength(20);

                    b.Property<string>("Rythum")
                        .HasMaxLength(100);

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("IntituteDetail","Master");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Master.ReligionMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<int>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Religion","Master");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Transaction.FeeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("FeeCategory","TransactionSch");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Transaction.FeeDetailClassWise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount");

                    b.Property<int>("CategoryId");

                    b.Property<int>("ClassId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FeePaymentType");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<int>("Type");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("FeeDetail","TransactionSch");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Transaction.FeeDiscountModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("DependentOnParticular");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("DiscountType");

                    b.Property<decimal>("DiscountValue");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("FeeDiscount","TransactionSch");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Transaction.FeeDiscountParticularWiseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("DiscountType");

                    b.Property<decimal>("DiscountValue");

                    b.Property<int>("FeeDiscountId");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<int>("ParticularId");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("FeeDiscountParticularWise","TransactionSch");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Transaction.StudentMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcademicId");

                    b.Property<int>("BatchId");

                    b.Property<string>("BloodGroup");

                    b.Property<string>("C_Address")
                        .HasMaxLength(250);

                    b.Property<int>("CourseId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("EmergencyPhone");

                    b.Property<string>("FatherEmail");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("FatherPhone")
                        .IsRequired();

                    b.Property<int>("FeeCategoryId");

                    b.Property<string>("Gender");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("JoiningDate");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("MotherPhone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("P_Address")
                        .HasMaxLength(250);

                    b.Property<string>("ParentsPhoto");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(110);

                    b.Property<int>("Religion");

                    b.Property<string>("RollCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("StudentEmail")
                        .IsRequired();

                    b.Property<string>("StudentPhone")
                        .IsRequired();

                    b.Property<string>("StudentPhoto");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Student","TransactionSch");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Transaction.StudentPromote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BatchId");

                    b.Property<int>("CourseId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("PromotionDate");

                    b.Property<int>("StudentId");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("StudentPromote","TransactionSch");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Transaction.SubjectMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<int>("IsElective");

                    b.Property<string>("SubjectCode")
                        .IsRequired();

                    b.Property<string>("SubjectDescription");

                    b.Property<string>("SubjectName")
                        .IsRequired();

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("Subject","TransactionSch");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Transaction.TimeTableAssignSubjTeacherModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<TimeSpan>("FromTime");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("PeriodName");

                    b.Property<int>("SubjecId");

                    b.Property<int>("TeacherId");

                    b.Property<int>("TimeTableDayId");

                    b.Property<int?>("TimeTableMasterModelId");

                    b.Property<TimeSpan>("ToTime");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("WeekDays");

                    b.HasKey("Id");

                    b.HasIndex("TimeTableMasterModelId");

                    b.ToTable("TimeTableAssign","Transactionsch");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Transaction.TimeTableMasterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BatchId");

                    b.Property<int>("CourseId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("TimeTableMaster","Transactionsch");
                });

            modelBuilder.Entity("SERP.Core.Entities.TransactionLog.LogMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompleteLog");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("InnerException");

                    b.Property<int>("IsActive");

                    b.Property<int>("IsDeleted");

                    b.Property<string>("Message");

                    b.Property<string>("StackTrace");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("LogMaster","TransactionLog");
                });

            modelBuilder.Entity("SERP.Core.Entities.Entity.Core.Transaction.TimeTableAssignSubjTeacherModel", b =>
                {
                    b.HasOne("SERP.Core.Entities.Entity.Core.Transaction.TimeTableMasterModel", "TimeTableMasterModel")
                        .WithMany("TimeTableAssignSubjTeacherModels")
                        .HasForeignKey("TimeTableMasterModelId");
                });
#pragma warning restore 612, 618
        }
    }
}
